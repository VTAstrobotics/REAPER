name: CI

on:
  pull_request:
    branches: "main"

jobs:
  build-dev-container:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Copy Dockerfile
      run: |
        cp ./.devcontainer/Dockerfile ./.github/actions/cppformat/
        cp -r * ./.github/actions/cppformat/

    - name: Modify Dockerfile for clang testing
      run: |
        echo "RUN sudo apt update && sudo apt install -y jq xz-utils" >> ./.github/actions/cppformat/Dockerfile
        echo "COPY ./.github/workflows/entrypoint.sh /" >> ./.github/actions/cppformat/Dockerfile
        echo "RUN sudo chmod +x /entrypoint.sh" >> ./.github/actions/cppformat/Dockerfile
        echo "COPY ./.github/actions/cppformat/ /" >> ./.github/actions/cppformat/Dockerfile
      # echo "COPY ../* /" >> ./.github/actions/cppformat/Dockerfile
      # echo "USER root" >> ./.github/actions/cppformat/Dockerfile
      # echo "ENTRYPOINT [\"/entrypoint.sh\"]" >> ./.github/actions/cppformat/Dockerfile

    - name: Print the container image
      run: cat ./.github/actions/cppformat/Dockerfile

    - name: Build the developer container image
      run: |
        docker build --file ./.github/actions/cppformat/Dockerfile --tag astro-dev .
        docker save astro-dev -o astro-dev.tar

    - name: Upload the devcontainer image
      uses: actions/upload-artifact@v4
      with:
        name: astro-dev
        path: astro-dev.tar


  apply-formatting:
    name: clang-format Code Formatter
    runs-on: ubuntu-latest
    needs: build-dev-container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Get developer container image
        uses: actions/download-artifact@v4
        with:
          name: astro-dev

      - name: Load developer container
        run: docker load -i astro-dev.tar

      # - name: Run developer container
      #   runs:
      #     using: 'docker'
      #     image: 'Dockerfile'

        run: sudo docker run --rm astro-dev bash -c "ls -al / && sudo chmod u+x /entrypoint.sh && source /entrypoint.sh"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Clang Code Formatter
      #   run: source ./.github/workflows/entrypoint.sh
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-src-code:
    name: Build Source Code
    runs-on: ubuntu-latest
    # needs: build-dev-container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      # - name: Get developer container image
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: astro-dev

      # - name: Load developer container
      #   run: docker load -i astro-dev.tar

      # - name: HELP
      #   run: |
      #     ls -a /
      #     docker image ls

      - name: Run developer container
        run: |
          docker build --file ./.github/actions/cppformat/Dockerfile --tag astro-dev .
          docker run --rm astro-dev bash -c "source /build_scripts/build.sh"
        # astro-dev bash -c "source /build_scripts/build.sh"

      # - name: Clang Code Formatter
      #   run: source ./.github/workflows/entrypoint.sh
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
